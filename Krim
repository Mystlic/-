>  #include<iostream>
> #include<cstring>
> #include<algorithm> using namespace std; const int N=501,INF=0X3f3f3f3f; int n,m,g[N][N],dis[N]; bool st[N]; void prim(){
>     memset(dis,0x3f,sizeof(dis));
>     int res=0;
>     for(int i=0;i<n;i++){
>         int t=-1;
>         for(int j=1;j<=n;j++){
>             if(!st[j]&&(t==-1||dis[t]>dis[j]))
>                 t=j;
>         }
>         if(i&&dis[t]==INF){
>             cout<<"impossible"<<endl;
>             return ;
>         }
>         if(i)res+=dis[t];
>         for(int j=1;j<=n;j++)
>             dis[j]=min(dis[j],g[t][j]);
>         st[t]=true;
>     }
>     cout<<res<<endl; } int main(void){
>     cin>>n>>m;
>     memset(g,0x3f,sizeof(g));
>     for(int i=0,a,b,c;i<m;i++){
>         cin>>a>>b>>c;
>         g[a][b]=g[b][a]=min(g[a][b],c);
>     }
>     prim();
>     return 0; }
